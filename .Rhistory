library(roxygen2)
?getTargetGenesPvalsWithIntensities
usethis::use_testthat()
usethis::use_test()
library(testthat)
seq_len(NA)
seq_len(c(1,3,4))
seq_len(c(1,3,4))
inds <- which((c(1,3,4)>5)==T)
seq_len(inds)
lengthinds)
length(inds)
geneFile=system.file("extdata", "gene_expression.tsv", package="Site2Target")
geneCoords <- Table2Granges(geneFile)
geneTable <- read.table(geneFile, header=TRUE)
geneDEIndices <- which((abs(geneTable$logFC)>1)==TRUE)
indicesLen <- length(geneDEIndices)
indicesLen
if(indicesLen >0) {geneTable <- geneTable[geneDEIndices,]}
geneTable
devtools::use_vignette("Site2Target.RMD")
library(devtools)
devtools::use_vignette("Site2Target.RMD")
usethis::use_vignette("Site2Target")
library(BiocStyle)
BiocManager::install("BiocStyle")
clean_tmpfiles()
clean_tmpfiles_mod()
getwd()
install.packages("pandoc")
devtools::install_github("rstudio/rmarkdown")
library(rmarkdown)
unlink("vignettes/Site2Target_cache", recursive = TRUE)
rmarkdown::pandoc_version()
rmarkdown::pandoc_exec()
?site2GeneDistance()
getwd()
remotes::install_github('rstudio/rmarkdown')
remotes::install_github('rstudio/rmarkdown', force = TRUE)
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown", force=TRUE)
Sys.getenv('RSTUDIO_PANDOC')
pandoc_version
pandoc::pandoc_version()
?Site2Target
?Site2Target
?Site2Target
?Site2Target
getwd()
geneFile=system.file("extdata", "gene_expression.tsv", package="Site2Target")
geneCoords <- Table2Granges(geneFile)
geneTable <- read.table(geneFile, header=TRUE)
tfFile =system.file("extdata", "MEIS_binding.tsv", package="Site2Target")
TFCoords <- Table2Granges(tfFile)
tfTable <- read.table(tfFile, header=TRUE)
# Peakwise association example
pvals <- getTargetGenesPvals(geneCoordinates=geneCoords, sites=TFCoords)
pvals
pvals <- getTargetGenesPvals(geneCoordinates=geneCoords, sites=TFCoords)
topTargetNum <- 5
topTargetIndex <- order(pvals)[1:topTargetNum]
# Make a data frame of peak targets pvalues and expression logFCs
dfTopTarget <-
data.frame(name=geneTable$name[topTargetIndex],
pvalue=pvals[topTargetIndex],
exprLogC=geneTable$logFC[topTargetIndex]
)
dfTopTarget
?Site2Target
geneFile=system.file("extdata", "gene_expression.tsv", package="Site2Target")
geneCoords <- Table2Granges(geneFile)
geneTable <- read.table(geneFile, header=TRUE)
tfFile =system.file("extdata", "MEIS_binding.tsv", package="Site2Target")
TFCoords <- Table2Granges(tfFile)
tfTable <- read.table(tfFile, header=TRUE)
## Peakwise association example
pvals <- getTargetGenesPvals(geneCoordinates=geneCoords, sites=TFCoords)
topTargetNum <- 5
topTargetIndex <- order(pvals)[1:topTargetNum]
dfTopTarget <-
data.frame(name=geneTable$name[topTargetIndex],
pvalue=pvals[topTargetIndex],
exprLogC=geneTable$logFC[topTargetIndex]
)
dfTopTarget
## Genewise association example
geneDEIndices <- which((abs(geneTable$logFC)>1)==TRUE)
indicesLen <- length(geneDEIndices)
if(indicesLen >0)
{
geneTable <- geneTable[geneDEIndices,]
geneCoords <- geneCoords[geneDEIndices]
}
geneDENames <- geneTable$name
geneDElogFC <- geneTable$logFC
geneCoordsDE <- geneCoords
stats <-
genewiseAssociation(associationBy="distance",
geneCoordinates=geneCoordsDE,
geneNames=geneDENames,
peakCoordinates=TFCoords,
distance=50000,
outFile="Gene_TF_50K")
stat
stats
?Site2Target::data
geneFile=system.file("extdata", "gene_expression.tsv",
package="Site2Target")
geneCoords <- Table2Granges(geneFile)
# Read gene table
geneTable <- read.table(geneFile, header=TRUE)
geeCoords
geneCoords
geneTable
# Read peak coordinates
tfFile =system.file("extdata", "MEIS_binding.tsv",
package="Site2Target")
TFCoords <- Table2Granges(tfFile)
# Read MEIS binding intensities
tfTable <- read.table(tfFile, header=TRUE)
tfFile
TFCoords
tfTable
TADsFile =system.file("extdata", "TADs.tsv",
package="Site2Target")
TADs <- Table2Granges(TADsFile)
TADs
# Read HiC interactions
HiCFile =system.file("extdata", "HiC_intensities.tsv",
package="Site2Target")
HiCstr1 <- Table2Granges(HiCFile, chrColName="Strand1_chr",
startColName="Strand1_start", endColName="Strand1_end")
HiCstr2 <- Table2Granges(HiCFile, chrColName="Strand2_chr",
startColName="Strand2_start", endColName="Strand2_end")
HiCTable <- read.table(HiCFile, header=TRUE)
HiCstr1
HiCstr2
HiCTable
?Site2Target
R CMD build
R CMD build Site2Target
library(BiocCheck)
BiocCheck("Site2Target")
BiocCheck("Site2Target"==TRUE)
BiocCheck()
?Site2Target
getwd()
geneFile=system.file("extdata", "gene_expression.tsv",
package="Site2Target")
geneCoords <- Table2Granges(geneFile)
geneTable <- read.table(geneFile, header=TRUE)
tfFile =system.file("extdata", "MEIS_binding.tsv",
package="Site2Target")
TFCoords <- Table2Granges(tfFile)
tfTable <- read.table(tfFile, header=TRUE)
# Predict targets of MEIS using peakwise-association
pvals <- getTargetGenesPvals( geneCoordinates=geneCoords,
sites=TFCoords, distance = 50000)
topTargetNum <- 5
topTargetIndex <- order(pvals)[1:topTargetNum]
dfTopTarget <-
data.frame(name=geneTable$name[topTargetIndex],
pvalue=pvals[topTargetIndex],
exprLogC=geneTable$logFC[topTargetIndex]
)
dfTopTarget
# Take differential genes iformation
geneDEIndices <- which((abs(geneTable$logFC)>1)==TRUE)
indicesLen <- length(geneDEIndices)
if(indicesLen >0)
{
geneTable <- geneTable[geneDEIndices,]
geneCoords <- geneCoords[geneDEIndices]
}
geneDENames <- geneTable$name
geneDElogFC <- geneTable$logFC
geneCoordsDE <- geneCoords
stats <-
genewiseAssociation(associationBy="distance",
geneCoordinates=geneCoordsDE,
geneNames=geneDENames,
peakCoordinates=TFCoords,
distance=50000,
outFile="Gene_TF_50K")
stats
library(devtools)
use_git_config(user.name="peymanzarrineh", user.email="peyman.zarrineh@manchester.ac.uk")
library(devtools)
?data.frame()
